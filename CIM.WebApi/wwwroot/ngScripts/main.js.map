{"version":3,"sources":["./src/app/services/customer.service.ts","./src/environments/environment.ts","./src/app/country/country.component.ts","./src/app/country/country.component.html","./src/app/customer/customer.component.html","./src/app/customer/customer.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/country.service.ts","./src/app/app.module.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/app-routing.module.ts","./src/app/services/web-api.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Country } from '../models/country';\r\nimport { Customer } from '../models/customer';\r\nimport { WebApiService } from './web-api.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomerService {\r\n\r\n  constructor(private apiService: WebApiService) { }\r\n\r\n\r\n  getAllCustomers(): Observable<Customer[]> {\r\n    let url = 'api/Customer/GetCustomerList';\r\n    return this.apiService.get<Customer[]>(url);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-country',\n  templateUrl: './country.component.html',\n  styleUrls: ['./country.component.css']\n})\nexport class CountryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>country works!</p>\n","\n\n\n<div class=\"card mb-2\">\n  <div class=\"card-header text-center\">Customer Information</div>\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-4\">\n          <fieldset class=\"form-group border p-3\">\n            <legend class=\"w-auto\">Customer List</legend>\n            <div class=\"card text-center mb-1 upper-hover\" *ngFor=\"let c of customers\" (click)=\"getForEdit(c.ID)\">\n              <div class=\"card-body\">\n                <h5 class=\"card-title custom-link-pointer\">{{c.CustomerName}}</h5>\n              </div>\n            </div>\n          </fieldset>\n      </div>\n      <div class=\"col-8\">\n        <fieldset class=\"form-group border p-3\">\n          <div class=\"row mb-1\">\n            <div class=\"col-12\">\n              <fieldset class=\"form-group border p-3\">\n                <legend class=\"w-auto\">Actions</legend>\n                <div class=\"row\">\n                  <div class=\"col-12\">\n                    <button class=\"btn btn-outline-primary btn-flat\">Edit</button>\n                    &nbsp;\n                    <button class=\"btn btn-outline-success btn-flat\">Save</button>\n                    &nbsp;\n                    <button class=\"btn btn-outline-danger btn-flat\">Delete</button>\n                    &nbsp;\n                    <button class=\"btn btn-outline-secondary btn-flat\">Cancel</button>\n                  </div>\n                </div>\n              </fieldset>\n            </div>\n          </div>\n          <div class=\"row mb-1\">\n            <div class=\"col-12\">\n              <fieldset class=\"form-group border p-3\">\n                <legend class=\"w-auto\">Basic Informations</legend>\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <div class=\"form-group mb-1\">\n                      <div class=\"row\">\n                        <label class=\"control-label col-4\">Name</label>\n                        <div class=\"col-8\">\n                          <input formControlName=\"CustomerName\" class=\"form-control form-control-sm\" />\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"form-group mb-1\">\n                      <div class=\"row\">\n                        <label class=\"control-label col-4\">Father Name</label>\n                        <div class=\"col-8\">\n                          <input formControlName=\"FatherName\" class=\"form-control form-control-sm\" />\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"form-group mb-1\">\n                      <div class=\"row\">\n                        <label class=\"control-label col-4\">Mother Name</label>\n                        <div class=\"col-8\">\n                          <input formControlName=\"MotherName\" class=\"form-control form-control-sm\" />\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"form-group mb-1\">\n                      <div class=\"row\">\n                        <label class=\"control-label col-4\">Marital Status</label>\n                        <div class=\"col-8\">\n                          <input id=\"single\" type=\"radio\" name=\"MaritalStats\" formControlName=\"MaritalStatus\" class=\"form-check-input\" value=\"1\" />\n                          <label for=\"single\">SINGLE</label> &nbsp;\n                          <input id=\"married\" type=\"radio\" name=\"MaritalStats\" formControlName=\"MaritalStatus\" class=\"form-check-input\" value=\"2\" />\n                          <label for=\"married\">MARRIED</label> &nbsp;\n                          <input id=\"other\" type=\"radio\" name=\"MaritalStats\" formControlName=\"MaritalStatus\" class=\"form-check-input\" value=\"3\" />\n                          <label for=\"other\">OTHER</label>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"form-group mb-1\">\n                      <div class=\"row\">\n                        <label class=\"control-label col-4\">Country</label>\n                        <div class=\"col-8\">\n                          <select class=\"form-control form-control-sm\" formControlName=\"CountryId\">\n                            <option disabled selected value=\"\">Select Country</option>\n                            <option *ngFor=\"let a of countries\" value=\"{{a.ID}}\">{{a.CountryName}}</option>\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-4\">\n                    <div class=\"fileUpload\" *ngIf=\"!customerImageSelected\">\n                      <div class=\"centerd text-center\" (click)=\"onImageUploadClick($event)\">\n                        <p class=\"text-center\">click to upload image</p>\n                      </div>\n                    </div>\n                    <div class=\"customer-image\" *ngIf=\"customerImageSelected\">\n                      <img [src]=\"customerPhotoUrl\" alt=\"Customer Image\" class=\"myImage\" />\n                      <div class=\"middle\">\n                        <button class=\"btn btn-outline-dark\" (click)=\"onImageUploadClick($event)\">\n                          Change Image\n                        </button>\n                      </div>\n                    </div>\n                    <input type=\"file\" id=\"imageInput\" accept=\".jpeg,.jpg,.png\" class=\"invisible\"\n                           #attachedImageInput (change)=\"onImageSelected($event)\">\n                  </div>\n                </div>\n              </fieldset>\n            </div>\n          </div>\n          <div class=\"row mb-1\">\n            <div class=\"col-12\">\n              <fieldset class=\"form-group border p-3\">\n                <legend class=\"w-auto\">Other Informations</legend>\n                <div class=\"row\">\n                  <div class=\"col-12 mb-1\">\n                    <button class=\"btn btn-outline-primary btn-flat\">Add</button>\n                  </div>\n                  <div class=\"col-12\">\n                    <table class=\"table table-bordered table-responsive\">\n                      <thead>\n                        <tr>\n                          <th>Address</th>\n                          <th></th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                          <td></td>\n                          <td></td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </fieldset>\n            </div>\n          </div>\n        </fieldset>\n      </div>\n    </div>\n  </div>\n</div>\n\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { Country } from '../models/country';\r\nimport { Customer } from '../models/customer';\r\nimport { CountryService } from '../services/country.service';\r\nimport { CustomerService } from '../services/customer.service';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'app-customer',\r\n  templateUrl: './customer.component.html',\r\n  styleUrls: ['./customer.component.css']\r\n})\r\nexport class CustomerComponent implements OnInit {\r\n\r\n  public countries: Country[] = [];\r\n  public customers: Customer[] = [];\r\n  public customerPhotoUrl: any = '';\r\n  public selectedFileString: string;\r\n  public customerImageSelected: boolean = false;\r\n  @ViewChild('attachedImageInput', {\r\n    static: true\r\n  }) attachedImageInput: ElementRef\r\n\r\n  constructor(private countryService: CountryService, private customerService: CustomerService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.LoadCustomerList()\r\n    this.LoadCountryDDL();\r\n  }\r\n  LoadCountryDDL() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data) => {\r\n        this.countries = data;\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  LoadCustomerList() {\r\n    this.customerService.getAllCustomers().subscribe(\r\n      (data) => {\r\n        this.customers = data;\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    )\r\n  }\r\n\r\n  onImageSelected(event) {\r\n    let reader = new FileReader();\r\n    if (event.target.files && event.target.files.length > 0) {\r\n      let file = event.target.files[0];\r\n      reader.readAsDataURL(file);\r\n      reader.onload = (e: any) => {\r\n        this.selectedFileString = (reader.result as string).split(',')[1];\r\n        this.customerPhotoUrl = e.target.result;\r\n      };\r\n      this.customerImageSelected = true;\r\n    }\r\n  }\r\n\r\n  onImageUploadClick(event) {\r\n    event.preventDefault();\r\n    let element: HTMLElement = document.getElementById('imageInput') as HTMLElement;\r\n    element.click();\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'customerInformationManagement';\n}\n","<div class=\"container\">\n  <app-navbar></app-navbar>\n  <router-outlet></router-outlet>\n</div>\n\n\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Country } from '../models/country';\r\nimport { WebApiService } from './web-api.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CountryService {\r\n\r\n  constructor(private apiService: WebApiService) { }\r\n\r\n\r\n  getAllCountry(): Observable<Country[]> {\r\n    let url = 'api/Country/GetCountries';\r\n    return this.apiService.get<Country[]>(url);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CustomerComponent } from './customer/customer.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { CountryComponent } from './country/country.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CustomerComponent,\n    NavbarComponent,\n    CountryComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <a class=\"navbar-brand\"  [routerLink]=\"['']\">Hana Systems Ltd</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n    <div class=\"navbar-nav\">\r\n      <a class=\"nav-item nav-link active\" [routerLink]=\"['/home']\">Home</a>\r\n      <a class=\"nav-item nav-link\" [routerLink]=\"['/country']\">Country</a>\r\n    </div>\r\n  </div>\r\n</nav>\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CountryComponent } from './country/country.component';\r\nimport { CustomerComponent } from './customer/customer.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: CustomerComponent },\r\n  { path: 'home', component: CustomerComponent },\r\n  { path: 'country', component: CountryComponent },\r\n  { path: '**', redirectTo: '', pathMatch:'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\r\nimport { Observable, of, throwError, empty } from 'rxjs';\r\nimport { map, catchError, tap, retry } from 'rxjs/operators';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WebApiService {\r\n\r\n  constructor(private httpClient: HttpClient, @Inject('BASE_URL') private baseUrl: string) {\r\n    this.baseUrl = \"\";\r\n  }\r\n\r\n  get<T>(url: string, parmams: any = null) {\r\n    if (!parmams) {\r\n      return this.httpClient.get<T>(this.baseUrl + url);\r\n    } else {\r\n      return this.httpClient.get<T>(this.baseUrl + url + parmams);\r\n    }\r\n  }\r\n\r\n  postFile(url: string, formData: FormData) {\r\n    if (formData) {\r\n      return this.httpClient.post(this.baseUrl + url, formData).pipe\r\n        (\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n  }\r\n  post<T>(url: string, parmams: any = null) {\r\n    if (parmams) {\r\n      return this.httpClient.post<T>(this.baseUrl + url, parmams, {\r\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n      }).pipe(\r\n        catchError(this.handleError)\r\n      );\r\n    }\r\n    else {\r\n      return this.httpClient.post<T>(this.baseUrl + url, {\r\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n      }).pipe(\r\n        catchError(this.handleError)\r\n      );\r\n    }\r\n  }\r\n  private handleError(error: HttpErrorResponse) {\r\n    console.log('error:', error);\r\n    console.log('error.error:', error.error);\r\n    if (error.error instanceof ErrorEvent) {\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n\r\n      if (!error.url.includes('SubmitPickupSchedule')) {\r\n        alert(`Request not processed Due To Server Error`);\r\n      }\r\n    }\r\n\r\n    if (error.error[\"ExceptionType\"] && error.error[\"ExceptionType\"] == \"System.Security.SecurityException\") {\r\n      return throwError(error);\r\n    }\r\n    else {\r\n      return throwError(error);\r\n    }\r\n\r\n  };\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n\nexport function getBaseUrl() {\n  return document.getElementsByTagName('base')[0].href;\n}\n\nconst providers = [\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\n];\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}