{"version":3,"sources":["./src/app/services/customer.service.ts","./src/environments/environment.ts","./src/app/country/country.component.ts","./src/app/country/country.component.html","./src/app/customer/customer.component.ts","./src/app/customer/customer.component.html","./src/app/services/notification.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/models/customer-address.ts","./src/app/services/country.service.ts","./src/app/app.module.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/app-routing.module.ts","./src/app/services/web-api.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Country } from '../models/country';\r\nimport { Customer } from '../models/customer';\r\nimport { WebApiService } from './web-api.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomerService {\r\n\r\n  constructor(private apiService: WebApiService) { }\r\n\r\n\r\n  getAllCustomers(): Observable<Customer[]> {\r\n    let url = 'api/Customer/GetCustomerList';\r\n    return this.apiService.get<Customer[]>(url);\r\n  }\r\n\r\n  saveCustomer(customer: FormData): Observable<Customer> {\r\n    let url = 'api/Customer/SaveCustomer';\r\n    return this.apiService.postFile<Customer>(url, customer);\r\n  }\r\n\r\n  getAllCustomerById(id): Observable<Customer> {\r\n    let url = 'api/Customer/GetCustomerById?id='+id;\r\n    return this.apiService.get<Customer>(url);\r\n  }\r\n  deleteCustomer(customer: FormData): Observable<Customer> {\r\n    let url = 'api/Customer/DeleteCustomer';\r\n    return this.apiService.postFile<Customer>(url, customer);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Country } from '../models/country';\r\nimport { CountryService } from '../services/country.service';\r\nimport { NotificationService } from '../services/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-country',\r\n  templateUrl: './country.component.html',\r\n  styleUrls: ['./country.component.css']\r\n})\r\nexport class CountryComponent implements OnInit {\r\n  public countries: Country[] = [];\r\n  public CountryForm: FormGroup;\r\n  public countryData: Country;\r\n  public formSubmited: boolean = false;\r\n  constructor(private countryService: CountryService, private fb: FormBuilder, private notify: NotificationService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n    this.LoadCountries();\r\n  }\r\n  buildForm(): void {\r\n    this.CountryForm = this.fb.group({\r\n      ID: new FormControl(''),\r\n      CountryName: new FormControl('', [Validators.required, Validators.maxLength(50)])\r\n    });\r\n  }\r\n\r\n  LoadCountries(): void {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data) => {\r\n        this.countries = data;\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  onSave(): void {\r\n    this.formSubmited = true;\r\n    if (this.CountryForm.valid) {\r\n      this.countryData = this.CountryForm.getRawValue();\r\n      this.countryData.ID = 0;\r\n      console.log(this.countryData);\r\n      this.countryService.saveCountry(this.countryData).subscribe(\r\n        (data) => {\r\n          this.notify.showSuccess('Information Saved Succesfully', 'Information');\r\n          //console.log(data);\r\n          this.resetForm();\r\n        },\r\n        (err) => {\r\n          this.notify.showError('Error Occered!', 'Oops');\r\n          console.log(err);\r\n        }\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  resetForm(): void {\r\n    this.formSubmited = false;\r\n    this.LoadCountries();\r\n    this.buildForm();\r\n  }\r\n}\r\n","\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <fieldset class=\"form-group border p-2\">\r\n      <legend class=\"w-auto\">Add Country</legend>\r\n      <div class=\"row\">\r\n        <div class=\"col-10\">\r\n          <form [formGroup]=\"CountryForm\">\r\n            <div class=\"form-group mb-1\">\r\n              <div class=\"row\">\r\n                <label class=\"control-label col-2\">Country Name</label>\r\n                <div class=\"col-10\">\r\n                  <input formControlName=\"CountryName\" class=\"form-control form-control-sm\" />\r\n                  <span class=\"text-danger\" *ngIf=\"CountryForm.get('CountryName').errors?.maxlength\">Only 50 Charecters Are Allowed.</span>\r\n                  <span class=\"text-danger\" *ngIf=\"CountryForm.get('CountryName').errors?.required && formSubmited\">Please Provide Country Name.</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div class=\"col-2 text-right\">\r\n          <button class=\"btn btn-success btn-flat btn-sm\" (click)=\"onSave()\">Save</button>\r\n        </div>\r\n      </div>\r\n    </fieldset>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <label></label>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <table class=\"table table-bordered table-striped\">\r\n      <thead class=\"bg-dark text-light\">\r\n        <tr>\r\n          <th>#SL</th>\r\n          <th>Country Name</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let a of countries;let i=index\">\r\n          <td>{{i+1}}</td>\r\n          <td>{{a.CountryName}}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Country } from '../models/country';\r\nimport { Customer } from '../models/customer';\r\nimport { CountryService } from '../services/country.service';\r\nimport { CustomerService } from '../services/customer.service';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { CustomerAddress } from '../models/customer-address';\r\nimport { NotificationService } from '../services/notification.service';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'app-customer',\r\n  templateUrl: './customer.component.html',\r\n  styleUrls: ['./customer.component.css']\r\n})\r\nexport class CustomerComponent implements OnInit {\r\n\r\n  public countries: Country[] = [];\r\n  public customers: Customer[] = [];\r\n  public customerPhotoUrl: any = '';\r\n  public selectedFileString: string;\r\n  public selectedFile: File;\r\n  public selectedFileName: string;\r\n  public customerImageSelected: boolean = false;\r\n  public applicationState: string = 'new';\r\n  public mainForm: FormGroup;\r\n  public customerData: Customer;\r\n  public formSubmited: boolean = false;\r\n  @ViewChild('attachedImageInput', {\r\n    static: true\r\n  }) attachedImageInput: ElementRef\r\n\r\n  constructor(private countryService: CountryService, private customerService: CustomerService, private fb: FormBuilder, private domSanitizer: DomSanitizer, private notify: NotificationService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n    this.LoadCustomerList()\r\n    this.LoadCountryDDL();\r\n  }\r\n  LoadCountryDDL(): void {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data) => {\r\n        this.countries = data;\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  LoadCustomerList(): void {\r\n    this.customerService.getAllCustomers().subscribe(\r\n      (data) => {\r\n        this.customers = data;\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    )\r\n  }\r\n\r\n  onImageSelected(event) {\r\n    let reader = new FileReader();\r\n    if (event.target.files && event.target.files.length > 0) {\r\n      let file: File = event.target.files[0];\r\n      this.selectedFile = event.target.files[0];\r\n      let FileIsValid: boolean = (this.AllowedExt.indexOf(file.name.split('.').pop()) !=-1);\r\n      console.log(file.name, file.name.split('.').pop());\r\n      if (FileIsValid) {\r\n        reader.readAsDataURL(file);\r\n        reader.onload = (e: any) => {\r\n          this.selectedFileString = (reader.result as string).split(',')[1];\r\n          this.customerPhotoUrl = e.target.result;\r\n          this.selectedFileName = file.name;\r\n        };\r\n        this.customerImageSelected = true;\r\n      }\r\n      else {\r\n        alert('Only .jpeg, .jpg, .png Files are Allowed!');\r\n        this.selectedFile = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  onImageUploadClick(event) {\r\n    event.preventDefault();\r\n    let element: HTMLElement = document.getElementById('imageInput') as HTMLElement;\r\n    element.click();\r\n  }\r\n\r\n  buildForm() {\r\n    this.mainForm = this.fb.group({\r\n      ID: new FormControl('0'),\r\n      CountryID: new FormControl('0', Validators.required),\r\n      CustomerName: new FormControl('', [Validators.required, Validators.maxLength(50)]),\r\n      FatherName: new FormControl('', Validators.maxLength(50)),\r\n      MotherName: new FormControl('', Validators.maxLength(50)),\r\n      MaritalStatus: new FormControl('1'),\r\n      CustomerPhoto: new FormControl(''),\r\n      CustomerAddresses: this.fb.array([\r\n        this.buildCustomerAddressFormArrary()\r\n      ])\r\n    });\r\n  }\r\n\r\n  addCustomerAddresses(address: CustomerAddress = new CustomerAddress()) {\r\n    const CustomerAddressesForm = this.buildCustomerAddressFormArrary(address);\r\n    this.getCustomerAddresses().push(CustomerAddressesForm);\r\n  }\r\n  buildCustomerAddressFormArrary(address: CustomerAddress = new CustomerAddress()) {\r\n    return this.fb.group({\r\n      ID: new FormControl(address.ID),\r\n      CustomerID: new FormControl(address.CustomerID),\r\n      Address: new FormControl(address.Address, [Validators.required, Validators.maxLength(500)])\r\n    });\r\n  }\r\n  removeCustomerAddresses(i: number) {\r\n    this.getCustomerAddresses().removeAt(i);\r\n    if (i == 0) {\r\n      this.notify.showWarning('You Have To Provide At Least 1 Address', 'Warnings');\r\n      this.addCustomerAddresses();\r\n    }\r\n  }\r\n  getCustomerAddresses(): FormArray {\r\n    return this.mainForm.get(\"CustomerAddresses\") as FormArray\r\n  }\r\n  onSave() {\r\n    this.formSubmited = true;\r\n    if (this.mainForm.valid && this.mainForm.get('CountryID').value != 0) {\r\n      this.customerData = this.mainForm.getRawValue();\r\n      if ((this.customerData.ID == null || this.customerData.ID == 0) && !this.customerImageSelected)\r\n      { return; }\r\n      console.log(this.customerData);\r\n      let fd = new FormData();\r\n      let id = this.customerData.ID.toString();\r\n      console.log(id);\r\n      fd.append(\"ID\", this.customerData.ID.toString());\r\n      fd.append(\"CountryID\", this.customerData.CountryID.toString());\r\n      fd.append(\"CustomerName\", this.customerData.CustomerName.toString());\r\n      fd.append(\"FatherName\", this.customerData.FatherName.toString());\r\n      fd.append(\"MotherName\", this.customerData.MotherName.toString());\r\n      fd.append(\"MaritalStatus\", this.customerData.MaritalStatus.toString());\r\n      this.customerData.CustomerAddresses.forEach((item, i) => {\r\n        fd.append(`CustomerAddresses[${i}].ID`, item.ID.toString());\r\n        fd.append(`CustomerAddresses[${i}].CustomerID`, item.CustomerID.toString());\r\n        fd.append(`CustomerAddresses[${i}].Address`, item.Address);\r\n      });\r\n      if (this.selectedFile != null) {\r\n        fd.append(\"CustomerPhoto\", this.selectedFile, this.selectedFile.name);\r\n      }\r\n      console.log(fd);\r\n      fd.forEach((value, key) => {\r\n        console.log(key + \" \" + value)\r\n      });\r\n      this.customerService.saveCustomer(fd).subscribe(\r\n        (data) => {\r\n          this.notify.showSuccess('Information Saved Succesfully', 'Information');\r\n          console.log(data);\r\n          this.resetForm();\r\n        },\r\n        (err) => {\r\n          this.notify.showError('Error Occered!', 'Oops');\r\n          console.log(err);\r\n        }\r\n      )\r\n    }\r\n    else {\r\n      this.notify.showWarning('Please Provide All Required Data.', 'Warning');\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  resetForm() {\r\n    this.LoadCustomerList();\r\n    this.mainForm.enable();\r\n    this.buildForm();\r\n    this.selectedFile = null;\r\n    this.applicationState = 'new';\r\n    this.customerImageSelected = false;\r\n    this.formSubmited = false;\r\n    this.attachedImageInput.nativeElement.value = '';\r\n  }\r\n\r\n  loadById(id) {\r\n    this.applicationState = 'view';\r\n    this.customerService.getAllCustomerById(id).subscribe(\r\n      (data) => {\r\n        this.notify.showInfo('Information Loaded Succesfully', 'Information');\r\n        console.log(data);\r\n        this.mainForm.patchValue({\r\n          ID: data.ID,\r\n          CountryID: data.CountryID,\r\n          CustomerName: data.CustomerName,\r\n          FatherName: data.FatherName,\r\n          MotherName: data.MotherName,\r\n          MaritalStatus: data.MaritalStatus.toString()\r\n        });\r\n        if (data.CustomerPhoto != null) {\r\n          this.customerPhotoUrl = 'data:image/jpeg;base64,' + data.CustomerPhoto;\r\n          this.customerImageSelected = true;\r\n        }\r\n        else {\r\n          this.customerImageSelected = false;\r\n        }\r\n        this.getCustomerAddresses().clear();\r\n        data.CustomerAddresses.forEach((add, i) => {\r\n          this.addCustomerAddresses(add);\r\n        })\r\n        this.mainForm.disable();\r\n      },\r\n      (err) => {\r\n        this.notify.showError('Error Occered!', 'Oops');\r\n        console.log(err);\r\n      }\r\n    )\r\n  }\r\n  editModeOpen() {\r\n    this.applicationState = 'edit';\r\n    this.mainForm.enable();\r\n  }\r\n\r\n  deleteCustomer() {\r\n    this.customerData = this.mainForm.getRawValue();\r\n    if (confirm('Are You Sure About Delete This Record?')) {\r\n      if (this.customerData.ID > 0) {\r\n        let fd = new FormData();\r\n        fd.append(\"ID\", this.customerData.ID.toString());\r\n        this.customerService.deleteCustomer(fd).subscribe(\r\n          (data) => {\r\n            this.notify.showSuccess('Information Ddeleted Succesfully', 'Information');\r\n            console.log(data);\r\n            this.resetForm();\r\n          },\r\n          (err) => {\r\n            this.notify.showError('Error Occered!', 'Oops');\r\n            console.log(err);\r\n          });\r\n      }\r\n      else {\r\n        console.log('Not found!');\r\n      }\r\n    }\r\n    \r\n  }\r\n  enableEditingAddress(i) {\r\n    this.getCustomerAddresses().controls[i].enable;\r\n  }\r\n\r\n  AllowedExt = [\"png\", \"jpeg\", \"jpg\"];\r\n}\r\n","<div class=\"card mb-2\">\n  <div class=\"card-header text-center\">Customer Information</div>\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-4\">\n        <fieldset class=\"form-group border p-2\">\n          <legend class=\"w-auto\">Customer List</legend>\n          <div class=\"card text-center mb-1 upper-hover\" *ngFor=\"let c of customers\" (click)=\"loadById(c.ID)\">\n            <div class=\"card-body\">\n              <h5 class=\"card-title custom-link-pointer\">{{c.CustomerName}}</h5>\n            </div>\n          </div>\n        </fieldset>\n      </div>\n      <div class=\"col-8\">\n        <fieldset class=\"form-group border p-2\">\n          <legend class=\"w-auto\">Customer Details</legend>\n          <div class=\"row mb-1\">\n            <div class=\"col-12\">\n              <fieldset class=\"form-group border p-2\">\n                <legend class=\"w-auto\">Actions</legend>\n                <div class=\"row\">\n                  <div class=\"col-12\">\n                    <button class=\"btn btn-primary btn-flat\" *ngIf=\"applicationState=='view'\"\n                            (click)=\"editModeOpen()\">\n                      Edit\n                    </button>\n                    &nbsp;\n                    <button class=\"btn btn-success btn-flat btn-sm\" (click)=\"onSave()\"\n                            *ngIf=\"applicationState=='edit' || applicationState=='new'\">\n                      Save\n                    </button>\n                    &nbsp;\n                    <button class=\"btn btn-danger btn-flat btn-sm\" (click)=\"deleteCustomer()\"\n                            *ngIf=\"applicationState=='view'\">\n                      Delete\n                    </button>\n                    &nbsp;\n                    <button class=\"btn btn-secondary btn-flat btn-sm\" (click)=\"resetForm()\">Cancel</button>\n                  </div>\n                </div>\n              </fieldset>\n            </div>\n          </div>\n          <form [formGroup]=\"mainForm\">\n            <div class=\"row mb-1\">\n              <div class=\"col-12\">\n                <fieldset class=\"form-group border p-2\">\n                  <legend class=\"w-auto\">Basic Informations</legend>\n                  <div class=\"row\">\n                    <div class=\"col-8\">\n                      <div class=\"form-group mb-1\">\n                        <div class=\"row\">\n                          <label class=\"control-label col-4\">Name <span class=\"text-danger\"> *</span></label>\n                          <div class=\"col-8\">\n                            <input formControlName=\"CustomerName\" class=\"form-control form-control-sm\" />\n                            <span class=\"text-danger\"\n                                  *ngIf=\"mainForm.get('CustomerName').errors?.required && formSubmited\">\n                              Please Provide\n                              Customer Name.\n                            </span>\n                            <span class=\"text-danger\" *ngIf=\"mainForm.get('CustomerName').errors?.maxlength\">\n                              Only 50\n                              Charecters Are Allowed.\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"form-group mb-1\">\n                        <div class=\"row\">\n                          <label class=\"control-label col-4\">Father Name</label>\n                          <div class=\"col-8\">\n                            <input formControlName=\"FatherName\" class=\"form-control form-control-sm\" />\n                            <span class=\"text-danger\" *ngIf=\"mainForm.get('FatherName').errors?.maxlength\">\n                              Only 50\n                              Charecters Are Allowed.\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"form-group mb-1\">\n                        <div class=\"row\">\n                          <label class=\"control-label col-4\">Mother Name</label>\n                          <div class=\"col-8\">\n                            <input formControlName=\"MotherName\" class=\"form-control form-control-sm\" />\n                            <span class=\"text-danger\" *ngIf=\"mainForm.get('MotherName').errors?.maxlength\">\n                              Only 50\n                              Charecters Are Allowed.\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"form-group mb-1\">\n                        <div class=\"row\">\n                          <label class=\"control-label col-4\">Marital Status</label>\n                          <div class=\"col-8\">\n                            <div class=\"row\">\n                              <div class=\"col-4\">\n                                <input id=\"single\" type=\"radio\" name=\"MaritalStatus\" formControlName=\"MaritalStatus\"\n                                       value=\"1\" />\n                                <label for=\"single\">Single</label>\n                              </div>\n                              <div class=\"col-4\">\n                                <input id=\"married\" type=\"radio\" name=\"MaritalStatus\" formControlName=\"MaritalStatus\"\n                                       value=\"2\" />\n                                <label for=\"married\">Married</label>\n                              </div>\n                              <div class=\"col-4\">\n                                <input id=\"other\" type=\"radio\" name=\"MaritalStatus\" formControlName=\"MaritalStatus\"\n                                       value=\"3\" />\n                                <label for=\"other\">Other</label>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"form-group mb-1\">\n                        <div class=\"row\">\n                          <label class=\"control-label col-4\">Country <span class=\"text-danger\"> *</span></label>\n                          <div class=\"col-8\">\n                            <select class=\"form-control form-control-sm\" formControlName=\"CountryID\">\n                              <option disabled value=\"0\">Select Country</option>\n                              <option *ngFor=\"let a of countries\" value=\"{{a.ID}}\">{{a.CountryName}}</option>\n                            </select>\n                            <span class=\"text-danger\"\n                                  *ngIf=\"(mainForm.get('CountryID').errors?.required ||mainForm.get('CountryID').value== 0)&& formSubmited\">\n                              Please\n                              Select Country.\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                      <!--<div class=\"form-group mb-1\">\n                <div class=\"row\">\n                  <label class=\"control-label col-4\">Photo</label>\n                  <div class=\"col-8\">\n\n\n                  </div>\n                </div>\n              </div>-->\n                    </div>\n                    <div class=\"col-4\">\n                      <div class=\"fileUpload\" *ngIf=\"!customerImageSelected\">\n                        <div class=\"centerd text-center\" (click)=\"onImageUploadClick($event)\">\n                          <p class=\"text-center\">Upload image</p>\n                        </div>\n                      </div>\n                      <div class=\"customer-image\" *ngIf=\"customerImageSelected\">\n                        <img [src]=\"customerPhotoUrl\" alt=\"Customer Image\" class=\"myImage\" />\n                        <div class=\"middle\">\n                          <button class=\"btn btn-dark\" (click)=\"onImageUploadClick($event)\"\n                                  *ngIf=\"applicationState=='edit' || applicationState=='new'\">\n                            Change Image\n                          </button>\n                        </div>\n                      </div>\n                      <span class=\"text-danger\" *ngIf=\"(!customerImageSelected) && formSubmited\">\n                        Please Upload\n                        Image.\n                      </span>\n                    </div>\n                  </div>\n                </fieldset>\n              </div>\n            </div>\n            <div class=\"row mb-1\">\n              <div class=\"col-12\">\n                <fieldset class=\"form-group border p-3\">\n                  <legend class=\"w-auto\">Other Informations</legend>\n                  <div class=\"row\">\n                    <div class=\"col-12 mb-1\">\n                      <button class=\"btn btn-primary btn-flat btn-sm\"\n                              *ngIf=\"applicationState=='edit' || applicationState=='new'\"\n                              (click)=\"addCustomerAddresses()\">\n                        Add\n                      </button>\n                    </div>\n                    <div class=\"col-12\">\n                      <table class=\"table table-bordered table-striped\">\n                        <thead>\n                          <tr>\n                            <th>Address</th>\n                            <th style=\"width:200px;\"  *ngIf=\"applicationState=='edit' || applicationState=='new'\"></th>\n                          </tr>\n                        </thead>\n                        <tbody formArrayName=\"CustomerAddresses\">\n                          <tr *ngFor=\"let add of getCustomerAddresses().controls;let i=index\">\n                            <td [formGroupName]=\"i\">\n                              <input type=\"text\" formControlName=\"Address\" class=\"form-control form-control-sm\" />\n                              <span class=\"text-danger\"\n                                    *ngIf=\"add.get('Address').errors?.required && formSubmited\">\n                                Please Provide\n                                Address\n                              </span>\n                              <span class=\"text-danger\" *ngIf=\"add.get('Address').errors?.maxlength\">\n                                Address Can contain\n                                only 500 charecters\n                              </span>\n                            </td>\n                            <td *ngIf=\"applicationState=='edit' || applicationState=='new'\">\n                              <button class=\"btn btn-primary btn-flat btn-sm\"\n\n                                      (click)=\"enableEditingAddress(i)\">\n                                Edit\n                              </button> &nbsp;\n                              <button class=\"btn btn-danger btn-flat btn-sm\"\n                                      (click)=\"removeCustomerAddresses(i)\">\n                                Delete\n                              </button>\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </fieldset>\n              </div>\n            </div>\n          </form>\n        </fieldset>\n      </div>\n    </div>\n  </div>\n</div>\n\n<input type=\"file\" id=\"imageInput\" accept=\".jpeg,.jpg,.png\" class=\"invisible\" #attachedImageInput\n  (change)=\"onImageSelected($event)\">\n","import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(private toastr: ToastrService) { }\n\n  showSuccess(message, title) {\r\n    this.toastr.success(message, title)\r\n  }\r\n\r\n  showError(message, title) {\r\n    this.toastr.error(message, title)\r\n  }\r\n\r\n  showInfo(message, title) {\r\n    this.toastr.info(message, title)\r\n  }\r\n\r\n  showWarning(message, title) {\r\n    this.toastr.warning(message, title)\r\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'customerInformationManagement';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n\n\n","export class CustomerAddress {\n  constructor() {\n    this.ID = 0, this.CustomerID = 0, this.Address=''\n  }\n  ID: number;\n  CustomerID: number;\n  Address: string;\n}\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Country } from '../models/country';\r\nimport { WebApiService } from './web-api.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CountryService {\r\n  \r\n\r\n  constructor(private apiService: WebApiService) { }\r\n\r\n\r\n  getAllCountry(): Observable<Country[]> {\r\n    let url = 'api/Country/GetCountries';\r\n    return this.apiService.get<Country[]>(url);\r\n  }\r\n\r\n  saveCountry(countryData: Country) {\r\n    let url = 'api/Country/SaveCountry';\r\n    return this.apiService.post<Country[]>(url, countryData);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppComponent } from './app.component';\r\nimport { CustomerComponent } from './customer/customer.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { CountryComponent } from './country/country.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CustomerComponent,\r\n    NavbarComponent,\r\n    CountryComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ToastrModule.forRoot()\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n  <div class=\"container\">\r\n    <a class=\"navbar-brand\" [routerLink]=\"['']\">Hana Systems Ltd</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n      <div class=\"navbar-nav\">\r\n        <a class=\"nav-item nav-link\" [routerLink]=\"['/home']\">Home</a>\r\n        <a class=\"nav-item nav-link\" [routerLink]=\"['/country']\">Country</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CountryComponent } from './country/country.component';\r\nimport { CustomerComponent } from './customer/customer.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: CustomerComponent },\r\n  { path: 'home', component: CustomerComponent },\r\n  { path: 'country', component: CountryComponent },\r\n  { path: '**', redirectTo: '', pathMatch:'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\r\nimport { Observable, of, throwError, empty } from 'rxjs';\r\nimport { map, catchError, tap, retry } from 'rxjs/operators';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WebApiService {\r\n\r\n  constructor(private httpClient: HttpClient, @Inject('BASE_URL') private baseUrl: string) {\r\n    this.baseUrl = \"\";\r\n    //this.baseUrl = \"http://localhost:52439/\";\r\n  }\r\n\r\n  get<T>(url: string, parmams: any = null) {\r\n    if (!parmams) {\r\n      return this.httpClient.get<T>(this.baseUrl + url);\r\n    } else {\r\n      return this.httpClient.get<T>(this.baseUrl + url + parmams);\r\n    }\r\n  }\r\n\r\n  postFile<T>(url: string, formData: FormData) {\r\n    if (formData) {\r\n      return this.httpClient.post<T>(this.baseUrl + url, formData).pipe\r\n        (\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n  }\r\n  post<T>(url: string, parmams: any = null) {\r\n    if (parmams) {\r\n      return this.httpClient.post<T>(this.baseUrl + url, parmams, {\r\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n      }).pipe(\r\n        catchError(this.handleError)\r\n      );\r\n    }\r\n    else {\r\n      return this.httpClient.post<T>(this.baseUrl + url, {\r\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n      }).pipe(\r\n        catchError(this.handleError)\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    console.log('error:', error);\r\n    console.log('error.error:', error.error);\r\n    if (error.error instanceof ErrorEvent) {\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n\r\n      if (!error.url.includes('SubmitPickupSchedule')) {\r\n        alert(`Request not processed Due To Server Error`);\r\n      }\r\n    }\r\n\r\n    if (error.error[\"ExceptionType\"] && error.error[\"ExceptionType\"] == \"System.Security.SecurityException\") {\r\n      return throwError(error);\r\n    }\r\n    else {\r\n      return throwError(error);\r\n    }\r\n\r\n  };\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n\nexport function getBaseUrl() {\n  return document.getElementsByTagName('base')[0].href;\n}\n\nconst providers = [\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\n];\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}